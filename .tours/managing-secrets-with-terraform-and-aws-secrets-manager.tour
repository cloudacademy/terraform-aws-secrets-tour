{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Terraform Secrets",
  "steps": [
    {
      "directory": "aws_rds",
      "description": "Click the following command to list the S3 buckets in the AWS account:\n\n>> aws s3 ls\n\nAn Amazon S3 bucket named **cloudacademy-labbucket-###** was created for you at the start of this lab. Keep the terminal window open for the next step.",
      "title": "Amazon S3 bucket"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "Click **Insert Code** to insert the following code, then click **Next**:\n\n```js\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"5.9.0\"\n    }\n  }\n  backend \"s3\" {\n    bucket = \"REPLACE_ME\"\n    key    = \"ca-lab/terraform.tfstate\"\n    region = \"us-west-2\"\n  }\n}\n\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\n\n```",
      "line": 37,
      "title": "S3 backend"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "Replace the placeholder `REPLACE_ME` with the name of the S3 bucket that was output to the terminal. \n\nBe sure to keep the `\" \"` around the bucket name. \n\nClick **Next** to continue.",
      "line": 9,
      "title": "Bucket name"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "The `backend` block specifies the S3 bucket, key, and region where the Terraform state will be stored. The `key` is the path to the state file within the bucket. The `region` is the region where the S3 bucket was created.\n\nStoring the Terraform state in a remote S3 bucket is a secure alternative to storing the state on your local machine. The state file contains sensitive information about your infrastructure, such as passwords and API keys. Storing the state remotely ensures that sensitive information is not exposed or inadvertently checked into version control.",
      "line": 13,
      "title": "Remote state"
    },
    {
      "directory": "aws_rds",
      "description": "When this project is initialized, a `.terraform/terraform.tfstate` file will be populated with the backend state configuration.\n\nClick the following command to change into the **aws_rds** directory and initialize Terraform:\n\n>> cd aws_rds && terraform init",
      "title": "Init",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 128
        }
      }
    },
    {
      "directory": "aws_rds",
      "description": "\nConfiguring an S3 bucket as a Terraform backend has the following benefits:\n\n- Easier collaboration among team members\n- Remote state locking to prevent concurrent modifications\n- State file encryption at rest using SSE-S3, SSE-KMS, or SSE-C\n- Supports versioning and lifecycle management\n- Supports S3 bucket and IAM policies to control access to the state file",
      "title": "Remote state benefits"
    },
    {
      "file": "aws_rds/.terraform/terraform.tfstate",
      "description": "The `backend` object of this `terraform.tfstate` file contains the S3 bucket name, key, and region that were defined in the `main.tf` file.\n\nConfiguring an S3 bucket as a Terraform backend has the following benefits:\n\n- Easier collaboration among team members\n- Remote state locking to prevent concurrent modifications\n- State file encryption at rest using SSE-S3, SSE-KMS, or SSE-C\n- Supports versioning and lifecycle management\n- Supports S3 bucket and IAM policies to control access to the state file",
      "line": 5,
      "title": "State file"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "Click **Insert Code** to insert the following code, then click **Next**:\n\n```js\ndata \"aws_secretsmanager_secret\" \"mysql_login\" {\n  name = var.secret_name\n}\n\ndata \"aws_secretsmanager_secret_version\" \"secret_credentials\" {\n  secret_id = data.aws_secretsmanager_secret.mysql_login.id\n}\n\n\n```",
      "line": 35,
      "title": "Retrieve secret"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "The first `aws_secretsmanager_secret` data block retrieves the secret from AWS Secrets Manager. The `name` attribute references the `secret_name` variable defined in **variables.tf**.\n\nThe second `aws_secretsmanager_secret_version` data block retrieves the secret value from the `aws_secretsmanager_secret` using the secret's ID. The value can be accessed using the `secret_credentials` data source.",
      "line": 26,
      "title": "Secrets manager"
    },
    {
      "directory": "aws_rds",
      "description": "A Secrets Manager secret was created for you at the start of this lab. \n\nThe `LabSecret` secret is a JSON string that is made up of `username` and `password` keys. These values can be used to authenticate to the RDS DB instance in the next step.\n\nClick the following command to describe the secret:\n\n>> aws secretsmanager describe-secret --secret-id LabSecret\n",
      "title": "Describe secret"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "Click **Insert Code** to insert the following code, then click **Next**:\n\n```js\nresource \"aws_db_instance\" \"db_two\" {\n  engine               = var.engine\n  engine_version       = var.engine_version\n  instance_class       = var.instance_class\n  allocated_storage    = var.allocated_storage\n\n  username             = jsondecode(data.aws_secretsmanager_secret_version.secret_credentials.secret_string)[\"username\"]\n  password             = jsondecode(data.aws_secretsmanager_secret_version.secret_credentials.secret_string)[\"password\"]\n}\n\n\n```",
      "line": 47,
      "title": "RDS DB instance"
    },
    {
      "file": "aws_rds/main.tf",
      "description": "The `username` and `password` attributes of the RDS DB instance resource retrieve the secret values from the `secret_credentials` data source. \n\nThe `secret_string` attribute of the `secret_credentials` data source contains the value in JSON format. The `jsondecode` function converts the JSON string into a map, which can be accessed using the `username` and `password` keys.",
      "line": 35,
      "title": "Retrieve values"
    },
    {
      "file": "aws_rds/variables.tf",
      "description": "Insert the following code, then click **Next**:\n\n```js\n  sensitive   = true\n```",
      "line": 5,
      "title": "Masking variables"
    },
    {
      "file": "aws_rds/variables.tf",
      "description": "The `allocated_storage` attribute is not considered a secret type but will be used to illustrate the use of the `sensitive` attribute.\n\nThe `sensitive` attribute set to `true` will mask the value of the variable in the Terraform plan and apply output. This is useful for preventing sensitive information from being exposed in the terminal or in version control.",
      "line": 6,
      "title": "Sensitive variables"
    },
    {
      "directory": "aws_rds",
      "description": "Click the following command to view the Terraform plan:\n\n>> terraform plan",
      "title": "Terraform plan"
    },
    {
      "directory": "aws_rds",
      "description": "Since the `username` and `password` secrets were retrieved from Secrets Manager, their values in the plan output are masked with `(sensitive)` and `(sensitive value)`. \n\nThe `allocated_storage` attribute is also masked because it is configured as a sensitive variable in **variables.tf**.",
      "title": "Plan output"
    },
    {
      "directory": "aws_rds",
      "description": "With this current configuration, sensitive information is not exposed in the Terraform plan or apply output. \n\nAlso, any sensitive information that is stored in the Terraform state file will be encrypted using the S3 bucket's server-side encryption. \n\nFinally, secrets can be managed using the AWS Secrets Manager console or CLI.",
      "title": "Review"
    },
    {
      "directory": "aws_rds",
      "description": "You have successfully configured an Amazon RDS instance using credentials stored in AWS Secrets Manager.\n\nAmazon RDS instances can take 15 to 30 minutes to deploy, so you will not be applying these changes.\n\nReturn to the Cloud Academy Lab browser tab and run the validation check associated with this lab step.",
      "title": "Complete"
    }
  ]
}